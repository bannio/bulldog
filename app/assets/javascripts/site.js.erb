//= depend_on_asset "door_dog.png"
var SITENAME,
  STRIPE,
  UTIL,
  VIDEO,
  SELECT,
  TABLES,
  GA;

SITENAME = {
  common: {
    init: function () {
    // application-wide code
      console.log("SITE init common");
      // fix for Select2 not working in modals.
      // overwrite the function with an empty function block
      $.fn.modal.Constructor.prototype.enforceFocus = function () {};
      // Cookie alert
      $('.cookies-eu-ok').click(function (e) {
        e.preventDefault();
        $.cookie('cookie_eu_consented', 'true', { path: '/', expires: 365 });
        $('.cookies-eu').remove();
      });
      // iOS check
      if (navigator.userAgent.match(/iPhone|iPad|iPod/i)) {
        $('.modal').on('show.bs.modal', function () {
        // Position modal absolute and bump it down to the scrollPosition
          $(this)
            .css({
              position: 'absolute',
              marginTop: $(window).scrollTop() + 'px',
              bottom: 'auto'
            });
        // Position backdrop absolute and make it span the entire page
        //
        // Also dirty, but we need to tap into the backdrop after Boostrap
        // positions it but before transitions finish.
        //
          setTimeout(function () {
            $('.modal-backdrop').css({
              position: 'absolute',
              top: 0,
              left: 0,
              width: '100%',
              height: Math.max(
                document.body.scrollHeight,
                document.documentElement.scrollHeight,
                document.body.offsetHeight,
                document.documentElement.offsetHeight,
                document.body.clientHeight,
                document.documentElement.clientHeight
              ) + 'px'
            });
          }, 0);
        });
      }
      // Date picker used in many places
      // $("input.date_picker").datepicker({
      $(".date_picker").datepicker({
        showOn: "focus",
        dateFormat: "yy-mm-dd",
        changeMonth: true,
        changeYear: true
      });
      console.log("SITE datepicker");

      // Moved from navigation.js

      $('#subnavBtn').on("click", function () {
        $('#subnav').toggleClass("hidden");
      });

      $('#navbar').on('mouseenter', function () {
        $('#subnav').removeClass("hidden");
      });

      $('#subnav').on('mouseleave', function () {
        $('#subnav').addClass("hidden");
      });


      // Google analytics set up
      // GA.ga_setup();
      // Send Google a pageview event
      // ga('send', 'pageview', window.location.pathname);

      // Google analytics events
      // GA.ga_event('#ga_bdc_li', 'button', 'click', 'BDC linkedin');
      // GA.ga_event('#ga_twitter', 'button', 'click', 'BDC twitter');
      // GA.ga_event('#ga_pricing', 'button', 'click', 'pricing Link');
      // GA.ga_event('#ga_signup', 'button', 'click', 'sign up nav button');
      // GA.ga_event('#ga_signin', 'button', 'click', 'sign in');
    }
  },

  accounts: {
    init: function () {
    // controller-wide code
    },

    new: function () {
    // action-specific code
      console.log("accounts#new");
      // STRIPE.setupStripe();
    },

    new_card: function () {
    // action-specific code
      console.log("accounts#new_card");
      STRIPE.setupStripe();
    },

    update_card: function () {
    // action-specific code
      console.log("accounts#new_card");
      STRIPE.setupStripe();
    },

    create: function () {
    // action-specific code
    // reset env vars for production
      console.log("accounts#create");
      // STRIPE.setupStripe();
    },

    edit: function () {
      console.log("accounts#edit");
      SELECT.accountPlan();
    },

    update: function () {
      console.log("accounts#edit");
      SELECT.accountPlan();
    }
  },

  welcome: {
    index: function () {
      console.log("welcome#index");
      $('#first_sign_in_modal').modal('show');
    }
  },

  pages: {
    show: function () {
      console.log("pages#show");
      VIDEO.checkForVideos();
      // Google analytics events
      GA.ga_event('#ga_trial_1', 'button', 'click', 'top free trial btn');
      GA.ga_event('#ga_trial_2', 'button', 'click', 'simple free trial btn');
      GA.ga_event('#ga_trial_3', 'button', 'click', 'analysis free trial btn');
      GA.ga_event('#ga_trial_4', 'button', 'click', 'docs free trial btn');
      GA.ga_event('#ga_trial_5', 'button', 'click', 'vat free trial btn');
      GA.ga_event('#ga_trial_6', 'button', 'click', 'security free trial btn');
      GA.ga_event('#ga_trial_7', 'button', 'click', 'anywhere free trial btn');
      GA.ga_event('#ga_trial_8', 'button', 'click', 'bottom free trial');
      GA.ga_event('#obl_li', 'button', 'click', 'OBL linkedin');
      GA.ga_event('#ga_faq_1, #ga_faq_2, #ga_faq_3, #ga_faq_4', 'button', 'click', 'faq pricing link');
      GA.ga_event('#ga_features_trial', 'button', 'click', 'features free trial link');
      GA.ga_event('#intro_video', 'video', 'play', 'homepage video');
    }
  },

  help: {
    video: function () {
      console.log("help#video");
      VIDEO.checkForVideos();
      GA.ga_event('#business_video, #personal_video, #first_bill_video, #first_invoice_video', 'video', 'play', 'help videos');
    }
  },

  contacts: {
    // controller-wide code covers new and create actions
    init: function () {
      console.log("contacts#init");
      // GA.ga_event('#ga_contact_us', 'button', 'click', 'contact us');
      GA.ga_submit('#new_contact', 'form', 'submit', 'contact us');
    }
  },

  plans: {
    index: function () {
      console.log("plans#index");
      GA.ga_event('#ga_plan_1', 'button', 'click', 'personal plan');
      GA.ga_event('#ga_plan_2', 'button', 'click', 'business monthly plan');
      GA.ga_event('#ga_plan_3', 'button', 'click', 'business annual plan');
    }
  },

  bills: {
    index: function () {
      console.log("SITE bills#index");
      SELECT.billCustomer();
      SELECT.billSupplier();
      SELECT.billCategory();
      SELECT.billVatRate();
      TABLES.clickable_row();
      VIDEO.checkForVideos();
      // GA.ga_event('#first_bill_video', 'video', 'play', 'first bill video');
    }
  },

  invoices: {
    index: function () {
      console.log("invoices#index");
      TABLES.clickable_row();
      SELECT.invCustomer();
      VIDEO.checkForVideos();
    },
    edit: function () {
      console.log("invoices#edit");
      $("#bill_table_body").on("click", "td.remove-col", function () {
        $(this).parent().toggleClass("line-through");
      });
      SELECT.invoiceHeader();
    },
    new: function () {
      console.log("invoices#new");
      SELECT.invoiceCustomer();
      SELECT.invoiceHeader();
    },
    create: function () {
      console.log("invoices#create");
      SELECT.invoiceCustomer();
      SELECT.invoiceHeader();
    }
  },

  vat_rates: {
    index: function () {
      console.log("vat_rates#index");
      TABLES.clickable_row();
    }
  },

  categories: {
    index: function () {
      console.log("categories#index");
      TABLES.clickable_row();
    }
  },

  customers: {
    index: function () {
      console.log("customers#index");
      TABLES.clickable_row();
    }
  },

  suppliers: {
    index: function () {
      console.log("suppliers#index");
      TABLES.clickable_row();
    }
  },

  reports: {
    new: function () {
      console.log("reports#new");
      $("#exportBtn").on("click", function () { $('#new_report').submit(); });
      SELECT.reportCustomer();
      SELECT.reportSupplier();
      SELECT.reportCategory();
    },
    create: function () {
      console.log("reports#create");
      $("#exportBtn").on("click", function () { $('#new_report').submit(); });
      SELECT.reportCustomer();
      SELECT.reportSupplier();
      SELECT.reportCategory();
    },
  }
};

VIDEO = {
  checkForVideos: function () {
    if ($('video').length > 0) {
    var vj_src = 'https://vjs.zencdn.net/4.7/video.js';
    $.externalScript(vj_src).done(function (script, textStatus) {
      console.log('VJS Script loading: ' + textStatus);
        var videos, video;
        videos = $('video');
        videos.each(function () {
          video = $(this).attr('id');
          VIDEO.reset(video);
          VIDEO.init(video);
        });
      });
    };
  },
  reset: function (videoId) {
    var vid;
    console.log("resetting " + videoId);
    for (vid in _V_.players ) {
      console.log("found player for: " + vid.toString());
      if (vid.toString() === videoId) {
        delete _V_.players[vid];
        console.log("reset " + videoId);
      }
    }
  },
  init: function (videoId) {
    var id = "#" + videoId;
    console.log("checking for " + videoId + " existance");
    if ($(id).length > 0) {
      videojs(videoId, {
        'controls': true,
        'preload': 'auto',
        'width': '640px',
        'height': '360px'
      }, function () {
        // Player (this) is initialized and ready.
        console.log("video " + videoId + " initialised");
      });
    }
  }
};

SELECT = {
  formatResult: function (term) {
    var $term = $(
     '<span class="label label-important">New</span> ' + term.text
    );
    if (term.id == term.text) {
      return $term;
    }
    return term.text;
  },
  accountPlan: function () {
    $('#account_plan_id').select2({
      theme: "bootstrap",
      placeholder: 'Plan',
      allowClear: true,
      width: 'resolve',
    });
  },
  billCustomer: function () {
    $('#bill_customer_id').select2({
      // dropdownParent: $('#bill_modal'),
      theme: "bootstrap",
      placeholder: 'Customer',
      allowClear: true,
      width: '100%',
      selectOnClose: true, //try this to allow tab exit of fields
      tags: true,
      templateResult: SELECT.formatResult
    });
  },
  billSupplier: function () {
    // console.log('billSupplier starting');
    $('#bill_supplier_id').select2({
      // dropdownParent: $('#bill_modal'),
      theme: "bootstrap",
      placeholder: 'Supplier',
      allowClear: true,
      width: '100%',
      selectOnClose: true, //try this to allow tab exit of fields
      tags: true,
      templateResult: SELECT.formatResult
    });
    // console.log('billSupplier ending');
  },
  billCategory: function () {
    $('#bill_category_id').select2({
      theme: "bootstrap",
      placeholder: 'Category',
      allowClear: true,
      width: '100%',
      selectOnClose: true, //try this to allow tab exit of fields
      tags: true,
      templateResult: SELECT.formatResult
    });
  },
  billVatRate: function () {
    $('#bill_vat_rate_id').select2({
      theme: "bootstrap",
      placeholder: 'VAT rate',
      allowClear: true,
      width: '100%',
      selectOnClose: true, //try this to allow tab exit of fields
      tags: false  // prevent new creation - default value added for clarity
    });
  },
  reportCustomer: function () {
    $('#report_customer_id').select2({
      theme: "bootstrap",
      placeholder: 'Customer',
      allowClear: true,
      width: '100%',
      selectOnClose: true
    });
  },
    reportSupplier: function () {
    $('#report_supplier_id').select2({
      theme: "bootstrap",
      placeholder: 'Supplier',
      allowClear: true,
      width: '100%',
      selectOnClose: true
    });
  },
    reportCategory: function () {
    $('#report_category_id').select2({
      theme: "bootstrap",
      placeholder: 'Category',
      allowClear: true,
      width: '100%',
      selectOnClose: true
    });
  },
  invoiceCustomer: function () {
    $('#invoice_customer_id').select2({
      theme: "bootstrap",
      placeholder: 'Customer',
      allowClear: true,
      width: '100%',
      selectOnClose: true
    });
  },
  invCustomer: function () {
    // used in a modal
    $('#invoice_customer_id').select2({
      // dropdownParent: $('#invoice_filter_modal .modal-content'), //may help with JS conflicts
      theme: "bootstrap",
      placeholder: 'by customer',
      allowClear: true,
      width: '100%',
      selectOnClose: true
    });
  },
  invoiceHeader: function () {
    $('#invoice_header_id').select2({
      theme: "bootstrap",
      placeholder: 'Header',
      maximumInputLength: 27,
      allowClear: true,
      width: '100%',
      // width: 'resolve',
      selectOnClose: true,
      tags: true
    });
  }
};

TABLES = {
  clickable_row: function () {
    // This function is adapted to work on either data-rowlink (invoices)
    // or data-url (bills) within a table where the rows have a class of
    // rowlink. If/when the invoices table changes to JS then this could
    // be simplified. Note that data-rowlink results in an HTML
    $('tbody').on('click', 'tr.rowlink', function (e) {
      var link = $(this).data("url");
      var link2 = $(this).data("rowlink");
      if (link) {
        $.getScript(link);
        e.stopImmediatePropagation();
      } else if (link2) {
        window.location = link2;
      } else {
        return false;
      }
    });
  }
};

GA = {
  ga_setup: function () {
    console.log('starting ga_setup');
  // Google analytics set up
    <% if Rails.env == 'production' %>
      var ga_src = 'https://www.google-analytics.com/analytics.js';
      $.externalScript(ga_src).done(function (script, textStatus) {
        console.log('GA Script loading: ' + textStatus);
      });
      window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
      ga('create', 'UA-55810569-1', 'auto');
    <% else %>
      window.ga=window.ga||function() {
        var params = Array.prototype.slice.call(arguments, ga.length);
        console.log("GoogleAnalytics: " + params);
      };
    <% end %>
  },

  ga_event: function (selector, category, action, label, value) {
    $(selector).on('click', function () {
      ga('send', 'event', category, action, label, value);
    });
  },
  // This version seemed to work but waiting 300ms might be avoidable
  ga_submit: function (form, category, action, label, value) {
    console.log("GA.ga_submit");
    $(form).each(function () {
      var jqForm = $(this);
      var jsForm = this;
      jqForm.on('submit', function (event) {
        event.preventDefault();
        ga('send', 'event', category, action, label, value);
        setTimeout(function () {
          jsForm.submit();
        }, 300);
      });
    });
  }

  // This version should wait until callback triggered
  // I note that the default action is only prevented by the return false
  // ga_submit: function (form, category, action, label, value) {
  //   console.log("GA.ga_submit");
  //   $(form).on('submit', function (e) {
  //     // e.preventDefault();
  //     var _this = this;
  //     ga('send', 'event', category, action, label, value, {
  //       'hitCallback': function () {
  //         console.log("ga_submit hitCallback");
  //         // $(_this).parents('form').first().submit();
  //         $(_this).submit();
  //       }
  //     });
  //     // here is check if google-analytics.js is loaded and if not - return true, otherwise false
  //     // should guard against blocked use of ga.
  //     return !(ga.hasOwnProperty('loaded') && ga.loaded === true);
  //   });
  // }
};

STRIPE = {
  setupStripe: function () {
    var stripe_src = 'https://js.stripe.com/v2/';
    $.externalScript(stripe_src).done(function (script, textStatus) {
      console.log('Stripe Script loading: ' + textStatus);
      $('#card_number').payment('formatCardNumber');
      $('#card_code').payment('formatCardCVC');
      $('#cc_exp').payment('formatCardExpiry');
      Stripe.setPublishableKey('<%= STRIPE_PUBLIC_KEY %>');
      return STRIPE.setupForm();
    });
  },
  setupForm: function () {
    console.log("STRIPE setupForm");
    return $('form').submit(function () {
    // must only have one form on the page as the selector above
    // does not target an id so that the same code can be used on
    // both new account and new card. Old specific target was:
    // return $('#new_account').submit(function () {
      var expiry, validateExpiry, card, validCard, cvc, validCvc;
      $('input[type=submit]').attr('disabled', true);
      $('.card-number').removeClass('field_with_errors');
      $('.card-expiration').removeClass('field_with_errors');

      card = $('#card_number').val();
      validCard = $.payment.validateCardNumber(card);
      expiry = $('#cc_exp').payment('cardExpiryVal');
      validateExpiry = $.payment.validateCardExpiry(expiry);

      if (!validCard) {
        STRIPE.invalidCard();
        return false;
      }

      cvc = $('#card_code').val();
      validCvc = $.payment.validateCardCVC(cvc);
      if (!validCvc) {
        STRIPE.invalidCVC();
        return false;
      }

      if (!validateExpiry) {
        STRIPE.invalidExpiry();
        return false;
      }

      if ($('#card_number').length) {
        STRIPE.processCard();
        return false; // so that form is not submitted yet
      }
      return true;
    });
  },

  processCard: function () {
    console.log("STRIPE process card");
    var expiry = $('#cc_exp').payment('cardExpiryVal');
    var card;
    card = {
      number: $('#card_number').val(),
      cvc: $('#card_code').val(),
      expMonth: expiry.month,
      expYear: expiry.year
    };
    return Stripe.createToken(card, STRIPE.handleStripeResponse);
  },

  handleStripeResponse: function (status, response) {
    if (status === 200) {
      $('#account_stripe_card_token').val(response.id);
      // return $('#new_account')[0].submit();
      return $('form')[0].submit();
    }
    $('#stripe_error').text(response.error.message);
    return $('input[type=submit]').attr('disabled', false);
  },

  invalidCard: function () {
    $('#stripe_error').text('invalid card number');
    $('.card-number').addClass('field_with_errors');
    return $('input[type=submit]').attr('disabled', false);
  },

  invalidExpiry: function () {
    $('#stripe_error').text('invalid expiry date');
    $('.card-expiration').addClass('field_with_errors');
    return $('input[type=submit]').attr('disabled', false);
  },

  invalidCVC: function () {
    $('#stripe_error').text('invalid security code');
    $('.cvc').addClass('field_with_errors');
    return $('input[type=submit]').attr('disabled', false);
  }
};

UTIL = {
  exec: function (controller, action) {
    var ns = SITENAME,
      action = (action === undefined) ? "init" : action;

    if (controller !== "" && ns[controller] && typeof ns[controller][action] === "function") {
      ns[controller][action]();
    }
  },

  init: function () {
    var body = document.body,
      controller = body.getAttribute("data-controller"),
      action = body.getAttribute("data-action");

    UTIL.exec("common");
    UTIL.exec(controller);
    UTIL.exec(controller, action);
  }
};

// $(document).ready( UTIL.init );
// $(document).on('page:update', UTIL.init);
$(document).on("turbolinks:load", UTIL.init);
// $(document).ajaxComplete(UTIL.init);
// $('.modal').on('shown.bs.modal', UTIL.init);
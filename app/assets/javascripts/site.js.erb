var SITENAME;
var STRIPE;
var UTIL;

SITENAME = {
  common: {
    init: function () {
    // application-wide code
      console.log("SITE init common");
      // fix for Select2 not working in modals. 
      // save the original function
      // var enforceModalFocusFn = $.fn.modal.Constructor.prototype.enforceFocus;
      // overwrite the function with an empty function block
      $.fn.modal.Constructor.prototype.enforceFocus = function () {};
      // do something to "myModal"
      // then reset function in case it is needed
      // $myModal.on('hidden', function () {
          // $.fn.modal.Constructor.prototype.enforceFocus = enforceModalFocusFn;
    }
  },

  accounts: {
    init: function () {
    // controller-wide code
    },

    new: function () {
    // action-specific code
      console.log("accounts#new");
      $('#card_number').payment('formatCardNumber');
      $('#card_code').payment('formatCardCVC');
      $('#cc_exp').payment('formatCardExpiry');
      Stripe.setPublishableKey('<%= STRIPE_PUBLIC_KEY %>');
      return STRIPE.setupForm();
    },

    create: function () {
    // action-specific code
      console.log("accounts#create");
      $('#card_number').payment('formatCardNumber');
      $('#card_code').payment('formatCardCVC');
      $('#cc_exp').payment('formatCardExpiry');
      Stripe.setPublishableKey('<%= STRIPE_PUBLIC_KEY %>');
      return STRIPE.setupForm();
    },
  },

  welcome: {
    index: function () {
      console.log("welcome#index");
      $('#first_sign_in_modal').modal('show');
    }
  },

  pages: {
     show: function () {
      console.log("pages#show");
      $('body').attr("data-no-turbolink", "true");
      // var myPlayer = videojs('example_video_1');
     }
   },


  invoices: {
    edit: function () {
      console.log("invoices#edit");
      $("#bill_table_body").on("click", "td.remove-col", function () {
        $(this).parent().toggleClass("line-through");
      });
    }
  },

  reports: {
    new: function () {
      console.log("reports#new");
      $("#exportBtn").on("click", function () { $('#new_report').submit(); });
    },
    create: function () {
      console.log("reports#create");
      $("#exportBtn").on("click", function () { $('#new_report').submit(); });
    },
  }
};

STRIPE = {
  setupForm: function () {
    console.log("STRIPE setupForm");
    return $('#new_account').submit(function () {
      var expiry, validateExpiry, card, validCard, cvc, validCvc;
      $('input[type=submit]').attr('disabled', true);
      $('.card-number').removeClass('field_with_errors');
      $('.card-expiration').removeClass('field_with_errors');

      card = $('#card_number').val();
      validCard = $.payment.validateCardNumber(card);
      expiry = $('#cc_exp').payment('cardExpiryVal');
      validateExpiry = $.payment.validateCardExpiry(expiry);

      if (!validCard) {
        STRIPE.invalidCard();
        return false;
      }

      cvc = $('#card_code').val();
      validCvc = $.payment.validateCardCVC(cvc);
      if (!validCvc) {
        STRIPE.invalidCVC();
        return false;
      }

      if (!validateExpiry) {
        STRIPE.invalidExpiry();
        return false;
      }

      if ($('#card_number').length) {
        STRIPE.processCard();
        return false; // so that form is not submitted yet
      }
      return true;
    });
  },

  processCard: function () {
    console.log("STRIPE process card");
    var expiry = $('#cc_exp').payment('cardExpiryVal');
    var card;
    card = {
      number: $('#card_number').val(),
      cvc: $('#card_code').val(),
      expMonth: expiry.month,
      expYear: expiry.year
    };
    return Stripe.createToken(card, STRIPE.handleStripeResponse);
  },

  handleStripeResponse: function (status, response) {
    if (status === 200) {
      $('#account_stripe_card_token').val(response.id);
      return $('#new_account')[0].submit();
    }
    $('#stripe_error').text(response.error.message);
    return $('input[type=submit]').attr('disabled', false);
  },

  invalidCard: function () {
    $('#stripe_error').text('invalid card number');
    $('.card-number').addClass('field_with_errors');
    return $('input[type=submit]').attr('disabled', false);
  },

  invalidExpiry: function () {
    $('#stripe_error').text('invalid expiry date');
    $('.card-expiration').addClass('field_with_errors');
    return $('input[type=submit]').attr('disabled', false);
  },

  invalidCVC: function () {
    $('#stripe_error').text('invalid security code');
    $('.cvc').addClass('field_with_errors');
    return $('input[type=submit]').attr('disabled', false);
  }
};

UTIL = {
  exec: function (controller, action) {
    var ns = SITENAME,
      action = (action === undefined) ? "init" : action;

    if (controller !== "" && ns[controller] && typeof ns[controller][action] === "function") {
      ns[controller][action]();
    }
  },

  init: function () {
    var body = document.body,
      controller = body.getAttribute("data-controller"),
      action = body.getAttribute("data-action");

    UTIL.exec("common");
    UTIL.exec(controller);
    UTIL.exec(controller, action);
  }
};

// $( document ).ready( UTIL.init );
$(document).on('page:update', UTIL.init);